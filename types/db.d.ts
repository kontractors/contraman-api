/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type AccountStatus = "active" | "banned";

export type AccountType = "bot" | "user";

export type AuthType = "local-passkey" | "local-password" | "oauth_apple" | "oauth_github" | "oauth_google" | "oauth_intuit" | "oauth_microsoft";

export type ContractStatus = "active" | "cancelled" | "completed" | "draft";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type InvoiceStatus = "cancelled" | "draft" | "paid" | "sent";

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Numeric = ColumnType<string, number | string, number | string>;

export type TaskPriority = "high" | "low" | "medium";

export type TaskStatus = "cancelled" | "completed" | "in_progress" | "pending";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export type WorkloadType = "daily" | "monthly" | "weekly";

export interface Account {
  account_type: Generated<AccountType>;
  created_at: Generated<Timestamp | null>;
  deleted_at: Timestamp | null;
  id: Generated<Int8>;
  refresh_token: Generated<string>;
  status: Generated<AccountStatus | null>;
  updated_at: Generated<Timestamp | null>;
}

export interface Assignment {
  assigned_at: Generated<Timestamp | null>;
  employee_id: Int8 | null;
  id: Generated<Int8>;
  task_id: Int8;
}

export interface AuthCredential {
  account_id: Int8;
  auth_type: AuthType;
  created_at: Generated<Timestamp | null>;
  credential_data: Json;
  expires_at: Timestamp | null;
  id: Generated<Int8>;
  integration_metadata: Generated<Json | null>;
  is_active: Generated<boolean | null>;
  last_used_at: Timestamp | null;
  provider: string | null;
  provider_id: string | null;
}

export interface BotProfile {
  avatar_url: string | null;
  created_at: Generated<Timestamp | null>;
  deleted_at: Timestamp | null;
  description: string | null;
  id: Int8;
  metadata: Generated<Json | null>;
  name: string;
  owner_id: Int8;
  updated_at: Generated<Timestamp | null>;
}

export interface Business {
  contact_info: Generated<Json | null>;
  created_at: Generated<Timestamp | null>;
  deleted_at: Timestamp | null;
  description: string | null;
  id: Generated<Int8>;
  logo_url: string | null;
  name: string;
  owner_id: Int8;
  updated_at: Generated<Timestamp | null>;
}

export interface BusinessSettings {
  business_id: Int8;
  metadata: Generated<Json | null>;
  reg_number: string | null;
  tax_id: string;
}

export interface Client {
  business_id: Int8;
  contact_info: Generated<Json | null>;
  created_at: Generated<Timestamp | null>;
  deleted_at: Timestamp | null;
  id: Generated<Int8>;
  name: string;
  updated_at: Generated<Timestamp | null>;
}

export interface Contract {
  business_id: Int8;
  created_at: Generated<Timestamp | null>;
  deleted_at: Timestamp | null;
  description: string | null;
  due_date: Timestamp | null;
  end_date: Timestamp | null;
  id: Generated<Int8>;
  start_date: Timestamp | null;
  status: ContractStatus;
  title: string;
  updated_at: Generated<Timestamp | null>;
}

export interface Expense {
  business_id: Int8;
  created_at: Generated<Timestamp | null>;
  deleted_at: Timestamp | null;
  description: string | null;
  id: Generated<Int8>;
  incurred_at: Generated<Timestamp | null>;
  updated_at: Generated<Timestamp | null>;
  vendor_id: Int8;
}

export interface ExpenseItem {
  description: string | null;
  expense_id: Int8;
  id: Generated<Int8>;
  quantity: Numeric;
  total: Numeric;
  unit_price: Numeric;
}

export interface Invoice {
  business_id: Int8;
  client_id: Int8;
  created_at: Generated<Timestamp | null>;
  deleted_at: Timestamp | null;
  due_date: Timestamp | null;
  id: Generated<Int8>;
  issued_at: Generated<Timestamp | null>;
  last_sent: Timestamp | null;
  status: InvoiceStatus;
  updated_at: Generated<Timestamp | null>;
}

export interface InvoiceItem {
  description: string | null;
  id: Generated<Int8>;
  invoice_id: Int8;
  quantity: Numeric;
  total: Numeric;
  unit_price: Numeric;
}

export interface Member {
  account_id: Int8 | null;
  business_id: Int8;
  id: Generated<Int8>;
  joined_at: Generated<Timestamp | null>;
  max_workload: Generated<Numeric | null>;
  max_workload_type: Generated<WorkloadType | null>;
  metadata: Generated<Json | null>;
}

export interface Task {
  assigned_to: Int8 | null;
  contract_id: Int8;
  created_at: Generated<Timestamp | null>;
  deleted_at: Timestamp | null;
  description: string | null;
  due_date: Timestamp | null;
  id: Generated<Int8>;
  priority: TaskPriority;
  start_date: Timestamp;
  status: TaskStatus;
  title: string;
  updated_at: Generated<Timestamp | null>;
}

export interface UserProfile {
  avatar_url: string | null;
  country: Generated<string | null>;
  created_at: Generated<Timestamp | null>;
  deleted_at: Timestamp | null;
  email: string;
  id: Int8;
  metadata: Generated<Json | null>;
  name: string;
  phone: Generated<string | null>;
  updated_at: Generated<Timestamp | null>;
  username: string;
}

export interface Vendor {
  business_id: Int8;
  contact_info: Generated<Json | null>;
  created_at: Generated<Timestamp | null>;
  deleted_at: Timestamp | null;
  id: Generated<Int8>;
  name: string;
  updated_at: Generated<Timestamp | null>;
}

export interface Workload {
  business_id: Int8;
  date: Timestamp;
  id: Generated<Int8>;
  member_id: Int8;
  mins_worked: Generated<number>;
  task_ids: Generated<Json | null>;
}

export interface DB {
  account: Account;
  assignment: Assignment;
  auth_credential: AuthCredential;
  bot_profile: BotProfile;
  business: Business;
  business_settings: BusinessSettings;
  client: Client;
  contract: Contract;
  expense: Expense;
  expense_item: ExpenseItem;
  invoice: Invoice;
  invoice_item: InvoiceItem;
  member: Member;
  task: Task;
  user_profile: UserProfile;
  vendor: Vendor;
  workload: Workload;
}
